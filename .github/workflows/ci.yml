name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
        python-version: ['3.12']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('backend/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        uv sync --dev

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: |
        npm ci --legacy-peer-deps

    - name: Run backend tests
      working-directory: ./backend
      run: |
        uv run python -m pytest --verbose --tb=short --cov

    - name: Run frontend tests
      working-directory: ./frontend
      run: |
        npm run test:run

    - name: Run frontend linting
      working-directory: ./frontend
      run: |
        npm run lint

    - name: Build frontend
      working-directory: ./frontend
      run: |
        npm run build

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-node-${{ matrix.node-version }}-python-${{ matrix.python-version }}
        path: |
          backend/.coverage
          frontend/coverage/
        retention-days: 30

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Set up Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Run CI test script
      run: |
        chmod +x ./script/ci-test
        ./script/ci-test

    - name: Notify success
      if: success()
      run: |
        echo "üéâ All CI tests passed successfully!"
        echo "‚úÖ Backend tests completed"
        echo "‚úÖ Frontend tests completed"
        echo "‚úÖ Integration tests completed"

    - name: Notify failure
      if: failure()
      run: |
        echo "‚ùå CI tests failed!"
        echo "Please check the logs above for details."
        exit 1